import akshare as ak
import requests
import warnings

warnings.filterwarnings("ignore")

'''
新浪接口被禁止
'''
base_url = " http://hq.sinajs.cn/list="
def get_info(codelist):
    print("codelist ==>",codelist)



    # 使用逗号作为分隔符将列表转换为字符串
    # codes = ', '.join(str(item) for item in codelist)
    # codelist
    # url = base_url + codelist
    # print(url)
    #
    # response = requests.post(url)
    #
    # print(response)

    '''
    没有指定接口的数据让拿到
    '''
    #使用ak_share
    # ak.stock_zh_a_spot_em

    '''
    全量 - 匹配适合自己的？
    '''
    # 将字符串转换为列表，如果codelist最初是字符串形式的话
    # codelist = codelist.split(',')

    aa = ak.stock_zh_a_spot_em()
    aa.to_csv("./aaa.csv")
    need_col = ['代码', '名称', '涨跌幅', '量比', '5分钟涨跌', '涨速']
    df = aa[need_col]
    # df = df[(df['涨跌幅'] > 9) & (df['涨跌幅'] < 11)]
    # print(df)

    # 重命名
    # df.rename(columns={'代码': 'code', '名称': 'name', '涨跌幅': 'changepercent'}, inplace=True)
    df = df[(df['代码'].isin(codelist))]

    return df

# get_info("600706,001324")


list_zixuangu = [
'002436',	
'002583',	
'000860',	
'600195',	
'002050',	
'002335',	
'000700',	
'002215',	
'002824',	
'000410',	
'603618',	
'002355',	
'603997',	
'002987',	
'000957',	
'002518',	
'002664',	
'600222',	
'603663',	
'600215',	
'002979',	
'605018',	
'600338',	
'603121',	
'002182',	
'000811',	
'601137',	
'601111',	
'000913',	
'603800',	
'002870',	
'600501',	
'002959',	
'600785',	
'000837',	
'001330',	
'603658',	
'002989',	
'600489',	
'600838',	
'002578',	
'002424',	
'605300',	
'002533',	
'603931',	
'002708',	
'000931',	
'002681',	
'002922',	
'600037',	
'003009',	
'002148',	
'600990',	
'603125',	
'605118',	
'603256',	
'002467',	
'002766',	
'002165',	
'002249',	
'000156',	
'603817',	
'000559',	
'002638',	
'601138',	
'002837',	
'002738',	
'600399',	
'002036',	
'002262',	
'600996',	
'002472',	
'600216',	
'002243',	
'601126',	
'600376',	
'688651',	
'002195',	
'300785',	
'688228',	
'603860',	
'301045',	
'301128',	
'002869',	
'300300',	
'301231',	
'603052',	
'300148',	
'688543',	
'300545',	
'300982',	
'688716',	
'300925',	
'300135',	
'301428',	
'600109',	
'002429',	
'000999',	
'603963',	
'002856',	
'600081',	
'002644',	
'001336',	
'601799',	
'000951',	
'002044',	
'600795',	
'600011',	
'600741',	
'603638',	
'600029',	
'603987',	
'600250',	
'601098',	
'600060',	
'600693',	
'605598',	
'000905',	
'002489',	
'601113',	
'603308',	
'600897',	
'601156',	
'603992',	
'600730',	
'000623',	
'000797',	
'603324',	
'002461',	
'603129',	
'603617',	
'002706',	
'601518',	
'600578',	
'600998',	
'600971',	
'600642',	
'600039',	
'002832',	
'000036',	
'600320',	
'002946',	
'603113',	
'601101',	
'002352',	
'601939',	
'002312',	
'601328',	
'000507',	
'601577',	
'000965',	
'002501',	
'002991',	
'600350',	
'002557',	
'000933',	
'002244',	
'600000',	
'002372',	
'603727',	
'603311',	
'600708',	
'000782',	
'600738',	
'600327',	
'300857',	
'002947',	
'603773',	
'000925',	
'002822',	
'603726',	
'603388',	
'301139',	
'600246',	
'002771',	
'002222',	
'300627',	
'600879',	
'300075',	
'600118',	
'002465',	
'601698',	
'603707',	
'002929',	
'001319',	
'300339',	
'301448',	
'600239',	
'000034',	
'000815',	
'002115',	
'002279',	
'601059',	
'000766',	
'603307',	
'002682',	
'600817',	
'300093',	
'300173',	
'002218',	
'603679',	
'000546',	
'002658',	
'002882',	
'002329',	
'002150',	
'000155',	
'002141',	
'600753',	
'603315',	
'603662',	
'000908',	
'300811',	
'600792',	
'603995',	
'600610',	
'002577',	
'600476',	
'603636',	
'603516',	
'300707',	
'605133',	
'603335',	
'002363',	
'600506',	
'600130',	
'603768',	
'002920',	
'002232',	
'000536',	
'603687',	
'300608',	
'300609',	
'003029',	
'002908',	
'002413',	
'600316',	
'000936',	
'688609',	
'002512',	
'600844',	
'600367',	
'001282',	
'002126',	
'002965',	
'002351',	
'001278',	
'603009',	
'600148',	
'603926',	
'000158',	
'002401',	
'002025',	
'002446',	
'603629',	
'688525',	
'001287',	
'002077',	
'603816',	
'000026',	
'002668',	
'002240',	
'002192',	
'001298',	
'002727',	
'600185',	
'603528',	
'000503',	
'000665',	
'000892',	
'000975',	
'001317',	
'002019',	
'002121',	
'002123',	
'002198',	
'002272',	
'002409',	
'002480',	
'002579',	
'002599',	
'002605',	
'002685',	
'002823',	
'002846',	
'002864',	
'002971',	
'003019',	
'600071',	
'600126',	
'600201',	
'600587',	
'600750',	
'600993',	
'601801',	
'601869',	
'601901',	
'601965',	
'603203',	
'603278',	
'603566',	
'603666',	
'603786',	
'603855',	
'603917',	
'603998',	
'605186',	
'000571',	
'000632',	
'300757',	
'600360',	
'600635',	
'601116',	
'603037',	
'603286',	
'603099',	
'603178',	
'002930',	
'002928',	
'002729',	
'002647',	
'002348',	
'001238',	
'000030',	
'002224',	
'003032',	
'605228',	
'603073',	
'601899',	
'603177',	
'000878',	
'000547',	
'603220',	
'002176',	
'603728',	
'002898',	
'002332',	
'600586',	
'002444',	
'688300',	
'600449',	
'002075',	
'603068',	
'605566',	
'000066',	
'002782',	
'002308',	
'002955',	
'002031',	
'002045',	
'603162',	
'600798',	
'600428',	
'001205',	
'600751',	
'001228',	
'605050',	
'603128',	
'002640',	
'600962',	
'002623',	
'002865',	
'600732',	
'601012',	
'000821',	
'002819',	
'601995',	
'000519',	
'688327',	
'300531',	
'000801',	
'600119',	
'603596',	
'603283',	
'002937',	
'002795',	
'600605',	
'003021',	
'001269',	
'002757',	
'688377',	
'603895',	
'600460',	
'603986',	
'603163',	
'601881',	
'002560',	
'605319',	
'603667',	
'002692',	
'603206',	
'002722',	
'603706',	
'600684',	
'300364',	
'001373',	
'600178',	
'603991',	
'600775',	
'003003',	
'603533',	
'002676',	
'002238',	
'600864',	
'601456',	
'601099',	
'601066',	
'300606',	
'000676',	
'002995',	
'600409',	
'600877',	
'603607',	
'000863',	
'600106',	
'603703',	
'000045',	
'002068',	
'002717',	
'001309',	
'000058',	
'600408',	
'600333',	
'603080',	
'603890',	
'600833',	
'603878',	
'002876',	
'002889',	
'300554',	
'600619',	
'605255',	
'600310',	
'601133',	
'605358',	
'603290',	
'003026',	
'002119',	
'688362',	
'605111',	
'603738',	
'603061',	
'603005',	
'600745',	
'601699',	
'601666',	
'000983',	
'601011',	
'000712',	
'002878',	
'000802',	
'601928',	
'300426',	
'002919',	
'603598',	
'002555',	
'603721',	
'601595',	
'000793',	
'300280',	
'002354',	
'002291',	
'002624',	
'002712',	
'600892',	
'600633',	
'300291',	
'300063',	
'300058',	
'002905',	
'002558',	
'002517',	
'002343',	
'002292',	
'002174',	
'000917',	
'605577',	
'603258',	
'603103',	
'600825',	
'600640',	
'600373',	
'002797',	
'601162',	
'601136',	
'601108',	
'600906',	
'600369',	
'600030',	
'603567',	
'603127',	
'003020',	
'002793',	
'002020',	
'001367',	
'600513',	
'002810',	
'002845',	
'002387',	
'600552',	
'000413',	
'001308',	
'301321',	
'000070',	
'605277',	
'002885',	
'603380',	
'688260',	
'002600',	
'600114',	
'002122',	
'603626',	
'002993',	
'000021',	
'603151',	
'002286',	
'000625',	
'002305',	
'002752',	
'002897',	
'002943',	
'600155',	
'600742',	
'603615',	
'603767',	
'603806',	
'002855',	
'600860',	
'600839',	
'300277',	
'603215',	
'300429',	
'300047',	
'600716',	
'603357',	
'600565',	
'600641',	
'600724',	
'600805',	
'002693',	
'688068',	
'603158',	
'002136',	
'600470',	
'000829',	
'600960',	
'603306',	
'603586',	
'603496',	
'003007',	
'603297',	
'002137',	
'002369',	
'600353',	
'300951',	
'002587',	
'002046',	
'002358',	
'002008',	
'002459',	
'001229',	
'002368',	
'002370',	
'002675',	
'000756',	
'600807',	
'002932',	
'000661',	
'600351',	
'603439',	
'600535',	
'600276',	
'002505',	
'605588',	
'002652',	
'002281',	
'000988',	
'002463',	
'002230',	
'603985',	
'603003',	
'603322',	
'300570',	
'002902',	
'603083',	
'600131',	
'603019',	
'603912',	
'603078',	
'603906',	
'600886',	
'600885',	
'000009',	
'600661',	
'600200',	
'600211',	
'002750',	
'603353',	
'603863',	
'600133',	
'002124',	
'600604',	
'000032',	
'002338',	
'601127',	
'300210',	
'000828',	
'600335',	
'002590',	
'603305',	
'601599',	
'002277',	
'300878',	
'000955',	
'603360',	
'600159',	
'000002',	
'600649',	
'600173',	
'600683',	
'600322',	
'000718',	
'600686',	
'600006',	
'002997',	
'002976',	
'002536',	
'002454',	
'002284',	
'000981',	
'000570',	
'605068',	
'603982',	
'603211',	
'603048',	
'601689',	
'600469',	
'002888',	
'600363',	
'300503',	
'002903',	
'002896',	
'002975',	
'002527',	
'001266',	
'603015',	
'002767',	
'002535',	
'603298',	
'002892',	
'002850',	
'002812',	
'002709',	
'002576',	
'000922',	
'002420',	
'600189',	
'600186',	
'000670',	
'002356',	
'600636',	
'301091',	
'002671',	
'002201',	
'002790',	
'001323',	
'600225',	
'300042',	
'002236',	
'002180',	
'600769',	
'300539',	
'603650',	
'002803',	
'002315',	
'002151',	
'002456',	
'002217',	
'603958',	
'603608',	
'600665',	
'002799',	
'002229'

]


list_ruozhuanqiang = [
'600030',	
'000676',	
'002050',	
'002850',	
'603728',	
'000922',	
'300337',	
'002979',	
'605277',	
'002579',	
'603005',	
'605111',	
'002535',	
'600186',	
'001238',	
'002413',	
'605068',	
'601689',	
'000570',	
'600006',	
'002454',	
'603982',	
'002976',	
'603048',	
'605319',	
'600469',	
'601595',	
'603533',	
'002558',	
'300364',	
'002919',	
'002605',	
'603721',	
'605577',	
'300291',	
'300063',	
'002292',	
'002343',	
'000917',	
'300058',	
'002905',	
'605086',	
'300539',	
'603650',	
'603567',	
'002020',	
'603958',	
'002505',	
'301091'
'001323',	
'002790',	
'600665',	
'002767',	
'603298',	
'002356',	
'600119',	
'003020',	
'002810',	
'603322',	
'002201',	
'000670',	
'603738',	
'003026',	
'002640',	
'002315',	
'002229',	
'600363',	
'002420',	
'600610',	
'600189'

        


]




def get_zixuangu_df():
    aa = ak.stock_zh_a_spot_em()
    # aa.to_csv("./aaa.csv")
    need_col = ['代码', '名称', '涨跌幅', '量比', '5分钟涨跌', '涨速']
    df = aa[need_col]
    # df = df[(df['涨跌幅'] > 9) & (df['涨跌幅'] < 11)]
    # print(df)

    # 重命名
    # df.rename(columns={'代码': 'code', '名称': 'name', '涨跌幅': 'changepercent'}, inplace=True)
    df = df[(df['代码'].isin(list_zixuangu))]

    print(df)
    return df


def get_ruozhuanqiang_df():
    aa = ak.stock_zh_a_spot_em()
    need_col = ['代码', '名称', '涨跌幅', '量比', '5分钟涨跌', '涨速']
    df = aa[need_col]
    df = df[(df['代码'].isin(list_ruozhuanqiang))]

    print(df)
    return df


list_T = [
    '605118',	
'605108',	
'603936',	
'603909',	
'603879',	
'603595',	
'301359',	
'603200',	
'601360',	
'601336',	
'601138',	
'601012',	
'600903',	
'600887',	
'600884',	
'600778',	
'600689',	
'600581',	
'600536',	
'600468',	
'600360',	
'600280',	
'600212',	
'003015',	
'002975',	
'002897',	
'002861',	
'002542',	
'002531',	
'002528',	
'002084',	
'002049',	
'001368',	
'001338',	
'001270',	
'000821',	
'000721',	
'000705',	
'000656',	
'000652',	
'000572',	
'000422',	
'000032',	
'600048',	
'002918',	
'600801',	
'601236',	
'001227',	
'002193',	
'002142',	
'002385',	
'601888',	
'002561',	
'002145',	
'000957',	
'002594',	
'002547',	
'002186',	
'001256',	
'002487',	
'603616'

]

no_notify_list=[


]

def get_T():
    aa = ak.stock_zh_a_spot_em()
    need_col = ['代码', '名称', '涨跌幅', '量比', '涨速']
    df = aa[need_col]
    df = df[(df['代码'].isin(list_T))]
    # print(df)
    df.rename(columns={'代码': 'code','名称':'股票简称'}, inplace=True)

    return df



def get_zixuanguAsCode_df():
    aa = ak.stock_zh_a_spot_em()
    # aa.to_csv("./aaa.csv")
    need_col = ['代码', '名称', '涨跌幅', '量比', '5分钟涨跌', '涨速']
    df = aa[need_col]
    # df = df[(df['涨跌幅'] > 9) & (df['涨跌幅'] < 11)]
    # print(df)

    # 重命名
    # df.rename(columns={'代码': 'code', '名称': 'name', '涨跌幅': 'changepercent'}, inplace=True)
    df = df[(df['代码'].isin(list_zixuangu))]
    df.rename(columns={'代码': 'code', '名称': '股票简称'}, inplace=True)
    # print(df)
    return df



def get_no_notify_list():
    return no_notify_list



